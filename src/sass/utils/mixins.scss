// font-face
// Built from https://css-tricks.com/snippets/css/using-font-face/
@mixin font-face($font-name, $font-path, $font-weight: 400, $font-style: normal, $support-required: 'modern') {
  @font-face {
    font-family: $font-name;
    font-style: $font-style;
    font-weight: $font-weight;
    @if $support-required == 'oldie-otf' {
      src: url('#{$font-path}.otf');
      src: url('#{$font-path}.otf?#iefix') format('embedded-opentype');
    }
    @if $support-required == 'oldie' {
      src: url('#{$font-path}.eot');
      src: url('#{$font-path}.eot?#iefix') format('embedded-opentype'), url('#{$font-path}.woff2') format('woff2'),
        url('#{$font-path}.woff') format('woff'), url('#{$font-path}.ttf') format('truetype');
    }
    @if $support-required == 'recent' {
      src: url('#{$font-path}.woff2') format('woff2'), url('#{$font-path}.woff') format('woff'),
        url('#{$font-path}.ttf') format('truetype');
    }
    @if $support-required == 'modern' {
      src: url('#{$font-path}.woff2') format('woff2'), url('#{$font-path}.woff') format('woff');
    }
  }
  @if $support-required !=
    'oldie-otf' and
    $support-required !=
    'oldie' and
    $support-required !=
    'recent' and
    $support-required !=
    'modern'
  {
    @error 'Invalid support-required value. Must be "oldie"==>IE8 and above/ Android native browser 4+/ Safari 4.3 OR "recent"==>IE9+/ Android native browser 4.0+/ Safari 4.3+ OR "modern"==>IE9+/ Android native browser 4.4+/ Safari 5.1+';
  }
}

// Custom version & dynamic
@mixin font-face-dynamic($font-name, $font-path, $font-weight: 400, $font-style: normal) {
  @font-face {
    font-family: $font-name;
    font-style: $font-style;
    font-weight: $font-weight;
    src: url('#{$font-path}.eot') format('embedded-opentype'), url('#{$font-path}.woff') format('woff'),
      url('#{$font-path}.woff2') format('woff2'), url('#{$font-path}.ttf') format('truetype'),
      url('#{$font-path}.svg') format('svg');
  }
}

// Responsive way of displaying image (using div background)
@mixin display-bg-image($image-name, $background-position: center top, $background-size: cover) {
  @include media-breakpoint-up(lg) {
    background-image: url('../images/#{$image-name}@3x.png') !important;
  }
  @include media-breakpoint-up(md) {
    background-image: url('../images/#{$image-name}@2x.png');
  }
  @include media-breakpoint-down(md) {
    background-image: url('../images/#{$image-name}.png');
  }
  background-position: $background-position;
  background-repeat: no-repeat;
  background-size: $background-size;
}

// tentative
@mixin night-show-container($grid-class-1, $grid-class-2) {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr 1fr;

  .#{$grid-class-1} {
    grid-area: 1 / 2 / 2 / 3;
  }

  .#{$grid-class-2} {
    grid-area: 2 / 1 / 3 / 2;
    grid-column: 1 / span 2;
  }
}

@mixin dazzling-text {
  -webkit-text-fill-color: transparent;
  background: $dazzling-mask-color;
  background-clip: text;
}

@mixin dazzling-text-disable {
  -webkit-text-fill-color: unset;
  background: unset;
  background-clip: unset;
}

// Source: http://aslanbakan.com/en/blog/browser-and-device-specific-css-styles-with-sass-and-less-mixins/
@mixin browser($browsers: Mozilla) {
  @each $browser in $browsers {
    html[data-browser*='#{$browser}'] & {
      @content;
    }
  }
}
